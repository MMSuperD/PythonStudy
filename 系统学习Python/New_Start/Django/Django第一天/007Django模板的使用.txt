
1.对应功能函数返回相应的模板内容

    def index(request):
        # 进行处理M 和 T 的交互
        #1.加载模板文件
        template_file = loader.get_template("booktest/index.html");
        #2.定义模板上线文，给模板传递数据
        template_context = RequestContext(request,{});
        #3.渲染模板，把模板中的变量等转化为标准的html
        template_html = template_file.render(context=locals(), request=request);
        return HttpResponse(template_html);

2.简写形式
    return render(请求,模板文件,[模板文件中变量的值]);# ["content":"I am a boy"] 表示可传,可不传
    return render(request,"booktest/index.html",{});

3.模板文件中变量写法
    1.变量
        {{变量}}
        列如:{{content}}
    2.for循环的使用(list 表示一个列表)
        <ul>
            {%for i in list%}
                <li>变量i的值:{{i}}</li>
            {% empty%}
                <li>列表为空</li>
            {%endfor%}
        </ul>


4.配置应用中的urls.py 文件
  # 项目的urls 配置文件,也可以配合着路径
    urlpatterns = [
        url("^index$",views.index),
        url("^index2$",views.index2),
        url("^dynamicPage$",views.dynamicPage),
        url("^",views.index_defalut)
        ]